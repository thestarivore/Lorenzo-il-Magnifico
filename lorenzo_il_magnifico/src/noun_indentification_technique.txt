Before starting with the Class diagram we had identify all the classes.
This was done using the method of "Noun Identification Technique" explained in the book "UsingUML - Perdita Stevens".
By using the same book as a reference we proceed with building the CRC Cards Diagram and afterwards the Class Diagram.

Strong Candidates: (tab indicates inheritance, while in the parenthesis we have some of the attributes)
------------------------------------------------------------------------------------------------
-controllers.Player (models.Points points, models.Resources res, models.board.PersonalBoard personalBoard, models.cards.LeaderCard leaderCards[4])
-models.Resources  (woods, stones, servants, coins)
-models.Points (victory, military, faith)
-models.cards.Card
	-models.cards.DevelopmentCard (controllers.game_course.Period period, models.Resources cost, controllers.effects.ImmediateEffects.ImmediateEffect immediateEffect, controllers.effects.PermanentEffects.PermanentEffect permanentEffect)
		-models.cards.Territory
		-models.cards.Building
		-models.cards.Character
		-models.cards.Venture (models.Resources alternativeCost)
	-models.cards.LeaderCard (models.Requirements requirements, controllers.ability.SpecialAbility specialAbility)
-models.Requirements
-controllers.ability.SpecialAbility
	-controllers.ability.OncePerRoundAbility (controllers.game_course.Action action)
	-controllers.ability.PermanentAbility (controllers.game_course.Action action)
-controllers.effects.ImmediateEffects.ImmediateEffect (models.Resources resources, models.Points points, controllers.game_course.Action bonusAction)
-controllers.effects.PermanentEffects.PermanentEffect
-controllers.game_course.Action
	-controllers.game_course.ProductionAction
	-controllers.game_course.HarvestAction
-models.board.FamilyMember (color, models.board.Dice dice)
	-models.board.NeutralFamilyMember
-models.board.Dice
-game.TheGame (controllers.game_course.Period period, playersNumber)
	- game.AdvancedGame (models.board.PersonalBonusTile customBonusTile)
-controllers.game_course.Period (controllers.game_course.Round round)
-controllers.game_course.Round (controllers.game_course.phases.Phase phase)
-controllers.game_course.phases.Phase
	-controllers.game_course.phases.RoundSetup
	-controllers.game_course.Action
	-controllers.game_course.phases.VaticanReport
	-controllers.game_course.phases.EndOfRound
-models.board.Board (models.board.ActionSpace spaces, models.board.TheMarket market, models.board.TheCouncilPalace councilPalace, models.board.trackers.Track tracks[])
-models.board.PersonalBoard  (models.cards.DevelopmentCard cards)
-models.board.PersonalBonusTile
	-models.board.CustomPersonalBonusTile
-models.cards.Deck (models.cards.Card cards[])
-models.board.Tower (models.cards.Card cards[])
-models.board.ExcommunicationTile (controllers.game_course.Period period)
-models.board.CoveringTiles
-models.board.ExcommunicationCubes
-models.board.MarkerDiscs
-models.board.trackers.Track (models.board.MarkerDiscs markerDiscs)
	-models.board.trackers.VictoryPointsTrack
	-models.board.trackers.MilitaryPointsTrack
	-models.board.trackers.FaithPointsTrack
	-models.board.trackers.TurnOrderTrack
-models.board.ActionSpace (models.cards.DevelopmentCard card, models.Resources bonus, models.board.FamilyMember familyMember)
-models.board.TheMarket
-models.board.TheCouncilPalace
-models.CouncilPrivilege
-controllers.game_course.EndOfGame
